#!/usr/bin/env node

/**
 * Setup environment variables script
 * @author Gin<gin_vn@haldata.net>
 * @lastupdate Gin<gin_vn@haldata.net>
 */

const fs = require('fs');
const path = require('path');
const readline = require('readline');

const envExamplePath = path.join(__dirname, '../tests/config/env.example');
const envPath = path.join(__dirname, '../.env');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

function askQuestion(question) {
  return new Promise((resolve) => {
    rl.question(question, resolve);
  });
}

async function setupEnvFile() {
  console.log('🔧 Setting up environment variables for tests...\n');
  
  // Check if .env already exists
  if (fs.existsSync(envPath)) {
    const overwrite = await askQuestion('❓ .env file already exists. Overwrite? (y/N): ');
    if (overwrite.toLowerCase() !== 'y') {
      console.log('✅ Keeping existing .env file');
      rl.close();
      return;
    }
  }
  
  // Gather information
  const baseUrl = await askQuestion('🌐 Base URL (https://vinhdev.pro.vn): ') || 'https://vinhdev.pro.vn';
  const email = await askQuestion('📧 Test email: ');
  const password = await askQuestion('🔑 Test password: ');
  const nodeEnv = await askQuestion('🏗️  Environment (development): ') || 'development';
  const headless = await askQuestion('🖥️  Headless mode (false): ') || 'false';
  
  // Create .env content
  const envContent = `# Test Configuration Environment Variables
# Generated by setup-env.js

# Base URL for testing
BASE_URL=${baseUrl}

# Test credentials
TEST_EMAIL=${email}
TEST_PASSWORD=${password}

# Environment settings
NODE_ENV=${nodeEnv}

# Browser settings
HEADLESS=${headless}
SLOW_MO=0
`;
  
  // Write .env file
  fs.writeFileSync(envPath, envContent);
  
  console.log('\n✅ .env file created successfully!');
  console.log('📝 You can now run: npx playwright test tests/dashboard.spec.ts');
  console.log('⚠️  Remember to add .env to .gitignore to avoid committing credentials');
  
  rl.close();
}

// Run setup
setupEnvFile().catch(console.error); 